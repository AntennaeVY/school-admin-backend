{
  "openapi": "3.0.0",
  "info": {
    "title": "School Admin API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Main (development) server"
    }
  ],
  "tags": [
    {
      "name": "Users"
    },
    {
      "name": "Auth"
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "summary": "List all users.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsers_ResT"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsers_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Token is missing or expired"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsers_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user.",
        "requestBody": {
          "description": "JSON object with `User` schema properties",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser_ReqT"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUser_ResT"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUser_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Required properties missing or invalid"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUser_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/email": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user by email.",
        "description": "User can only update himself. Must be admin to update anyone",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "JSON object with `User` schema properties",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserByEmail_ReqT"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserByEmail_ResT"
                }
              }
            }
          },
          "400": {
            "description": "Update object might contain invalid properties/values or email was not provided either.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Invalid properties provided"
                }
              }
            }
          },
          "401": {
            "description": "Token might be missing or expired, not owner or not admin.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "You can't update another user's information"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/email/{emailBase64}": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve user by email.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "emailBase64",
            "in": "path",
            "description": "Email of the user to fetch in Base64 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByEmail_ResT"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Email property is missing or invalid"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Token is missing or expired"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user by email.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "User can only delete himself. Must be admin to delete anyone",
        "parameters": [
          {
            "name": "emailBase64",
            "in": "path",
            "description": "Email of the user to delete in Base64 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns deleted `User` object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserByEmail_ResT"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Email is missing or invalid"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Token is missing or expired"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserByEmail_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/id/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve user by id (deprecated use email instead)",
        "deprecated": true,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the user to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserById_ResT"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Id parameter is invalid"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Token is missing or expired"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update an User by id (deprecated use email instead)",
        "deprecated": true,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "User can only update himself. Must be admin to update anyone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the user to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON object with any `User` properties to be updated.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserById_ReqT"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserById_ResT"
                }
              }
            }
          },
          "400": {
            "description": "The `id` parameter might be invalid, update object might contain invalid properties/values.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Invalid properties provided"
                }
              }
            }
          },
          "401": {
            "description": "Token might be missing or expired, not owner or not admin.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "You can't update another user's information"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete an user by id (deprecated use email instead)",
        "deprecated": true,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "User can only delete himself. Must be admin to delete anyone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the user to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns deleted `User` object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserById_ResT"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Id parameter is invalid"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Token is missing or expired"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserById_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login service.",
        "requestBody": {
          "description": "Login information, email and password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login_ReqT"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token is sent in `response` property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login_ResT"
                }
              }
            }
          },
          "400": {
            "description": "Either `email` or `password` are missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Email/Password not provided"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Invalid email/password"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login_ResT"
                },
                "example": {
                  "success": false,
                  "response": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "GetUsers_ResT": {
        "title": "GetUsers_ResT",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "response": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "example": {
          "success": true,
          "response": [
            {
              "id": "04241908-0468-4a45-978a-9ae69e06b274",
              "fullName": "John Doe",
              "dni": "V-10.111.223",
              "date_of_birth": "2002-04-12 00:00:00-04",
              "phone_number": "+58 04121234567",
              "email": "johndoe@email.com",
              "avatar": "http://example.com/image.jpg",
              "role": "USER_ROLE",
              "isBachelor": true,
              "status": "ACTIVE",
              "course": "Curso de Piloto"
            },
            {
              "id": "432ce0c7-6cf4-4f89-8510-0a9f0bb747b9",
              "fullName": "Elizabeth Doe",
              "dni": "E-23.456.353",
              "date_of_birth": "1999-07-31 00:00:00-04",
              "phone_number": "+1 555555555",
              "email": "elizabeth@email.com",
              "avatar": "http://example.com/image.png",
              "role": "USER_ROLE",
              "isBachelor": false,
              "status": "PENDING",
              "course": "Curso de Tripulante de Cabina"
            }
          ]
        }
      },
      "CreateUser_ReqT": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "ObjectId"
          },
          "fullName": {
            "type": "string"
          },
          "dni": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "Date"
          },
          "phone_number": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "URL"
          },
          "role": {
            "type": "string",
            "enum": ["USER_ROLE", "ADMIN_ROLE"],
            "default": "USER_ROLE"
          },
          "isBachelor": {
            "type": "boolean",
            "default": false
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "PENDING", "INACTIVE"],
            "default": "PENDING"
          },
          "course": {
            "type": "string",
            "enum": ["Curso de Tripulante de Cabina", "Curso de Piloto"]
          }
        },
        "required": [
          "fullName",
          "dni",
          "date_of_birth",
          "phone_number",
          "email",
          "isBachelor",
          "course"
        ],
        "example": {
          "fullName": "John Doe",
          "dni": "V-10.111.223",
          "date_of_birth": "2002-04-12 00:00:00-04",
          "phone_number": "+58 04121234567",
          "email": "johndoe@email.com",
          "password": "MySuperSecurePass!!$$",
          "isBachelor": true,
          "course": "Curso de Tripulante de Cabina"
        }
      },
      "CreateUser_ResT": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "response": {
            "oneOf": [
              {
                "type": "object",
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "example": {
          "success": true,
          "response": {
            "id": "04241908-0468-4a45-978a-9ae69e06b274",
            "fullName": "John Doe",
            "dni": "V-10.111.223",
            "date_of_birth": "2002-04-12 00:00:00-04",
            "phone_number": "+58 04121234567",
            "email": "johndoe@email.com",
            "avatar": "http://example.com/image.jpg",
            "role": "USER_ROLE",
            "isBachelor": true,
            "status": "ACTIVE",
            "course": "Curso de Tripulante de Piloto"
          }
        }
      },
      "GetUserByEmail_ResT": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "response": {
            "oneOf": [
              {
                "type": "object",
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "example": {
          "success": true,
          "response": {
            "id": "04241908-0468-4a45-978a-9ae69e06b274",
            "fullName": "John Doe",
            "dni": "V-10.111.223",
            "date_of_birth": "2002-04-12 00:00:00-04",
            "phone_number": "+58 04121234567",
            "email": "johndoe@email.com",
            "avatar": "http://example.com/image.jpg",
            "role": "USER_ROLE",
            "isBachelor": true,
            "status": "ACTIVE",
            "course": "Curso de Tripulante de Cabina"
          }
        }
      },
      "UpdateUserByEmail_ReqT": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "ObjectId"
          },
          "fullName": {
            "type": "string"
          },
          "dni": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "Date"
          },
          "phone_number": {
            "type": "string"
          },
          "email": {
            "description": "Notice that email must be sent in update object",
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "URL"
          },
          "role": {
            "type": "string",
            "enum": ["USER_ROLE", "ADMIN_ROLE"],
            "default": "USER_ROLE"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "PENDING", "INACTIVE"],
            "default": "PENDING"
          },
          "course": {
            "type": "string",
            "enum": ["Curso de Tripulante de Cabina", "Curso de Piloto"]
          }
        },
        "required": ["email"],
        "example": {
          "email": "johndoe@email.com",
          "avatar": "http://example.com/image2.jpg"
        }
      },
      "UpdateUserByEmail_ResT": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "response": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "response": "Updated successfuly"
        }
      },
      "DeleteUserByEmail_ResT": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "response": {
            "oneOf": [
              {
                "type": "object",
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "example": {
          "success": true,
          "response": {
            "id": "04241908-0468-4a45-978a-9ae69e06b274",
            "fullName": "John Doe",
            "dni": "V-10.111.223",
            "date_of_birth": "2002-04-12 00:00:00-04",
            "phone_number": "+58 04121234567",
            "email": "johndoe@email.com",
            "avatar": "http://example.com/image2.jpg",
            "role": "USER_ROLE",
            "isBachelor": true,
            "status": "ACTIVE",
            "course": "Curso de Piloto"
          }
        }
      },
      "GetUserById_ResT": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "response": {
            "oneOf": [
              {
                "type": "object",
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "example": {
          "success": true,
          "response": {
            "id": "04241908-0468-4a45-978a-9ae69e06b274",
            "fullName": "John Doe",
            "dni": "V-10.111.223",
            "date_of_birth": "2002-04-12 00:00:00-04",
            "phone_number": "+58 04121234567",
            "email": "johndoe@email.com",
            "avatar": "http://example.com/image.jpg",
            "role": "USER_ROLE",
            "isBachelor": true,
            "status": "ACTIVE",
            "course": "Curso de Tripulante de Cabina"
          }
        }
      },
      "UpdateUserById_ReqT": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "ObjectId"
          },
          "fullName": {
            "type": "string"
          },
          "dni": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "Date"
          },
          "phone_number": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "URL"
          },
          "role": {
            "type": "string",
            "enum": ["USER_ROLE", "ADMIN_ROLE"],
            "default": "USER_ROLE"
          },
          "isBachelor": {
            "type": "boolean",
            "default": false
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "PENDING", "INACTIVE"],
            "default": "PENDING"
          },
          "course": {
            "type": "string",
            "enum": ["Curso de Tripulante de Cabina", "Curso de Piloto"]
          }
        },
        "example": {
          "avatar": "http://example.com/image2.jpg"
        }
      },
      "UpdateUserById_ResT": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "response": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "response": "Updated successfuly"
        }
      },
      "DeleteUserById_ResT": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "response": {
            "oneOf": [
              {
                "type": "object",
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "example": {
          "success": true,
          "response": {
            "id": "04241908-0468-4a45-978a-9ae69e06b274",
            "fullName": "John Doe",
            "dni": "V-10.111.223",
            "date_of_birth": "2002-04-12 00:00:00-04",
            "phone_number": "+58 04121234567",
            "email": "johndoe@email.com",
            "avatar": "http://example.com/image2.jpg",
            "role": "USER_ROLE",
            "isBachelor": true,
            "status": "ACTIVE",
            "course": "Curso de Tripulante de Cabina"
          }
        }
      },
      "Login_ReqT": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "email": "johndoe@email.com",
          "password": "MySuperSecurePass!!$$"
        }
      },
      "Login_ResT": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "response": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "response": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "ObjectId"
          },
          "fullName": {
            "type": "string"
          },
          "dni": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "Date"
          },
          "phone_number": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "Note: Password is NEVER returned in GET requests, but it's required in POST requests"
          },
          "avatar": {
            "type": "string",
            "format": "URL"
          },
          "role": {
            "type": "string",
            "enum": ["USER_ROLE", "ADMIN_ROLE"],
            "default": "USER_ROLE"
          },
          "isBachelor": {
            "type": "boolean",
            "default": false
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "PENDING", "INACTIVE"],
            "default": "PENDING"
          },
          "course": {
            "type": "string",
            "enum": ["Curso de Tripulante de Cabina", "Curso de Piloto"]
          }
        },
        "required": [
          "fullName",
          "dni",
          "date_of_birth",
          "phone_number",
          "email",
          "isBachelor",
          "course"
        ]
      }
    }
  }
}
